name: Main

on:
  push:
    branches: [main]
    tags:
      - v[0-9]*
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: yarn install
      - run: yarn run lint
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: yarn install
      - run: yarn run build
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: yarn install
      - run: yarn test
  e2e-test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ secrets.E2E_TESTING_POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.E2E_TESTING_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.E2E_TESTING_POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
      redis:
        image: redis
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: yarn install
      - run: echo "${{secrets.E2E_TESTING_ENV}}" > .env
      - run: yarn run typeorm migration:run
      - run: yarn run test:e2e
  release:
    runs-on: ubuntu-latest
    needs: [build, lint, unit-test, e2e-test]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: subrelay
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/subrelay/api
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy-prd:
    needs: [release]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: SSH and deploy node app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd subrelay-backend/subrelay-api
            git checkout main
            git reset --hard
            git pull
            docker-compose -f docker-compose.main.yml up -d  --build
